# Copyright (c) 2010 - 2011, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 

Import('env')
import os

# Linux specific flags
env.Append(CPPDEFINES=['QCC_CPU_ARM'])
env.Append(CPPFLAGS=['-march=armv6',
                     '-mthumb-interwork'])

# Use the OpenEmbedded cross-compilation environment
vars = Variables()
vars.Add(PathVariable('OE_BASE', 'Base directory of OpenEmbedded build for ARM', os.environ.get('OE_BASE')))
vars.Update(env)
Help(vars.GenerateHelpText(env))

if '' == env.subst('$OE_BASE'):
   print 'OE_BASE variable is required for Linux/ARM builds'
   if not GetOption('help'):
      Exit(1)

# Use OpenEmbedded tools
gcc_prefix  = '$OE_BASE/bin/arm-angstrom-linux-gnueabi-'
env['CC']   = gcc_prefix + 'gcc'
env['CXX']  = gcc_prefix + 'g++'
env['LINK'] = gcc_prefix + 'gcc'




