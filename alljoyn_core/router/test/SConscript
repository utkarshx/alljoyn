# Copyright (c) 2010 - 2014, AllSeen Alliance. All rights reserved.
#
#    Permission to use, copy, modify, and/or distribute this software for any
#    purpose with or without fee is hereby granted, provided that the above
#    copyright notice and this permission notice appear in all copies.
#
#    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
#    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
#    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
#    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
#    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
#    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
#    OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
# 

Import('router_env', 'router_objs')
from os.path import basename

# Test Programs
progs = [
    router_env.Program('advtunnel', ['advtunnel.cc'] + router_objs),
    router_env.Program('ns', ['ns.cc'] + router_objs)
   ]

if router_env['OS'] in ['android', 'linux']:
   progs.append(router_env.Program('bbdaemon', ['bbdaemon.cc'] + router_objs))
   
#if router_env['OS'] == 'win7':
#   progs.append(router_env.Program('WinBtDiscovery.exe', ['WinBtDiscovery.cc']))
   
if router_env['ICE'] == 'on':
   if router_env['OS_GROUP'] == 'posix':
      progs.append(router_env.Program('packettest', ['PacketTest.cc'] + router_objs))

#
# On Android, build a static library that can be linked into a JNI dynamic 
# library to implement the daemon as a Service
#
if router_env['OS'] == 'android':
   libenv = router_env.Clone(CCFLAGS = '-DROUTER_LIB')
   libenv.Object(target = 'bbdaemon-lib', source = 'bbdaemon.cc')
   libbbdaemon = libenv.StaticLibrary(['bbdaemon-lib'] + router_objs)
   dlibs = libenv.Install('$CPP_DISTDIR/lib', libbbdaemon)

if router_env['OS_GROUP'] == 'winrt':
    progs = []
	
Return('progs')
